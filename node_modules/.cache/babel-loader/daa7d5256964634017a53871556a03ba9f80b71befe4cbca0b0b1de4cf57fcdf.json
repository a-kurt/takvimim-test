{"ast":null,"code":"import React from'react';import ReactDOM from'react-dom/client';import'./index.css';import App from'./App';import{AuthProvider}from'./context/AuthProvider';import{BrowserRouter,Routes,Route}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";var root=ReactDOM.createRoot(document.getElementById('root'));root.render(/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(BrowserRouter,{children:/*#__PURE__*/_jsx(AuthProvider,{children:/*#__PURE__*/_jsx(Routes,{children:/*#__PURE__*/_jsx(Route,{path:\"/*\",element:/*#__PURE__*/_jsx(App,{})})})})})}));","map":{"version":3,"names":["React","ReactDOM","App","AuthProvider","BrowserRouter","Routes","Route","jsx","_jsx","root","createRoot","document","getElementById","render","StrictMode","children","path","element"],"sources":["/home/atakan/Desktop/takvimim-test/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport { AuthProvider } from './context/AuthProvider';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <AuthProvider>\n        <Routes>\n          <Route path=\"/*\" element={<App />} />\n        </Routes>\n      </AuthProvider>\n    </BrowserRouter>\n  </React.StrictMode>\n);"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CACvC,MAAO,aAAa,CACpB,MAAO,CAAAC,GAAG,KAAM,OAAO,CACvB,OAASC,YAAY,KAAQ,wBAAwB,CACrD,OAASC,aAAa,CAAEC,MAAM,CAAEC,KAAK,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEhE,GAAM,CAAAC,IAAI,CAAGR,QAAQ,CAACS,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC,CACjEH,IAAI,CAACI,MAAM,cACTL,IAAA,CAACR,KAAK,CAACc,UAAU,EAAAC,QAAA,cACfP,IAAA,CAACJ,aAAa,EAAAW,QAAA,cACZP,IAAA,CAACL,YAAY,EAAAY,QAAA,cACXP,IAAA,CAACH,MAAM,EAAAU,QAAA,cACLP,IAAA,CAACF,KAAK,EAACU,IAAI,CAAC,IAAI,CAACC,OAAO,cAAET,IAAA,CAACN,GAAG,GAAE,CAAE,CAAE,CAAC,CAC/B,CAAC,CACG,CAAC,CACF,CAAC,CACA,CACpB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}